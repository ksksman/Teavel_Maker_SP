<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.edu.springboot.restboard.IBoardService">

	<select id="list"
		parameterType="com.edu.springboot.restboard.ParameterDTO"
		resultType="com.edu.springboot.restboard.BoardDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM boards 
				WHERE board_cate = #{board_cate}
				ORDER BY board_idx DESC
				) Tb
			)
			WHERE rNum BETWEEN #{start} AND #{end}	
	</select>
	
	<select id="boardTotalLength"
		parameterType="com.edu.springboot.restboard.ParameterDTO">
		SELECT COUNT(*) FROM boards * WHERE board_cate = #{board_cate}	
	</select>
	
	<select id="getPopularReviews" 
		parameterType="com.edu.springboot.restboard.ParameterDTO" 
		resultType="com.edu.springboot.restboard.BoardDTO">
	    SELECT * FROM (
	        SELECT Tb.*, rownum rNum FROM (
	            SELECT * FROM boards 
	            WHERE board_cate = #{board_cate} AND like_count >= 10
	            ORDER BY board_idx DESC
	        ) Tb
	    ) WHERE rNum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="search"
		parameterType="com.edu.springboot.restboard.ParameterDTO"
		resultType="com.edu.springboot.restboard.BoardDTO">
		SELECT * FROM boards
		WHERE board_cate = #{board_cate}
		<if test="searchWord != null and searchWord.size() > 0">
	        AND (
	            <foreach collection="searchWord" item="str" separator="OR">
	                <choose>
	                    <when test="searchField == 'title'">
	                        title LIKE '%' || #{str} || '%'
	                    </when>
	                    <when test="searchField == 'nickname'">
	                        nickname LIKE '%' || #{str} || '%'
	                    </when>
	                    <!-- 필요하면 다른 검색 필드 추가 가능 -->
	                    <otherwise>
	                        1=0 <!-- 잘못된 필드가 들어왔을 경우 SQL 실행되지 않도록 -->
	                    </otherwise>
	                </choose>
	            </foreach>
	        )
	    </if>	
		ORDER BY board_idx DESC
	</select>
	
	<select id="view"
		parameterType="com.edu.springboot.restboard.ParameterDTO"
		resultType="com.edu.springboot.restboard.BoardDTO">
		SELECT * FROM boards WHERE board_idx=#{board_idx}
	</select>
	
	<insert id="write"
		parameterType="com.edu.springboot.restboard.BoardDTO">
		INSERT INTO boards
			(board_idx, board_cate, nickname, title, content, post_date, view_count, like_count, attached_file)
		VALUES
			(boards_seq.nextval, #{board_cate}, #{nickname}, #{title}, #{content}, SYSDATE, 0, 0, #{attached_file})
	</insert>
	
	<!-- 좋아요 증가 -->
	<update id="increaseLikeCount" 
		parameterType="com.edu.springboot.restboard.ParameterDTO">
        UPDATE boards SET like_count = like_count + 1 WHERE board_idx = #{board_idx}
    </update>

	<!-- 조회수 증가 -->
    <update id="increaseViewCount"  
		parameterType="com.edu.springboot.restboard.ParameterDTO">
        UPDATE boards SET view_count = view_count + 1 WHERE board_idx = #{board_idx}
    </update>
    
	<!-- 리뷰 게시물 수정 -->
    <update id="updateBoard" parameterType="com.edu.springboot.restboard.BoardDTO">
        UPDATE boards SET 
            title = #{title},
            content = #{content}
        WHERE board_idx = #{board_idx}
    </update>

    <delete id="deleteBoard" parameterType="String">
        DELETE FROM boards WHERE board_idx = #{board_idx}
    </delete>
        
    <select id="getTopLikedReviews" 
    	resultType="com.edu.springboot.restboard.BoardDTO">
	    SELECT * FROM (
	        SELECT * FROM boards 
	        WHERE board_cate = 1 
	        ORDER BY like_count DESC
	    ) WHERE ROWNUM &lt;= 3
	</select>
	    
</mapper>




























